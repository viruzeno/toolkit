apiVersion: v1
kind: Namespace
metadata:
  name: web
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-path-rwx-example
  namespace: web
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: rook-ceph-block
  # volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
  namespace: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: volv
        persistentVolumeClaim:
          claimName: local-path-rwx-example
      containers:
      - name: httpd
        image: docker.io/nginxinc/nginx-unprivileged:alpine3.21-perl
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 1
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          seLinuxOptions:
            level: s0:c100,c102
            # type: container_file_t
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: volv
          mountPath: /data
---
apiVersion: v1
kind: Service
metadata:
  name: web-server-service
  namespace: web
spec:
  #type: NodePort #ClusterIP
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-server-ingress
  namespace: web
spec:
  ingressClassName: nginx
  rules:
  - host: web.server.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-server-service
            port:
              number: 80